/*
 * Copyright 2012  Samsung Electronics Co., Ltd
 *
 * Licensed under the Flora License, Version 1.1 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://floralicense.org/license/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "../../inc/edc_conf.h"
styles {
	style {
		name: "page_indicator_style";
		base: "font=TIZEN:style=BOLD font_size=20 align=center color=#5D5D5D wrap=mixed";	  
	}
}

collections {
   group { name: GROUP_PAGE_INDICATOR_UNIT;
        data {
            item: "focus_highlight" "on";
        }
		images {
			image: "page_indicator_current.png" COMP;
			image: "page_indicator_unit.png" COMP;
		}
		script {
			public rot;
			public alpha;

			public message(Msg_Type:type, id, ...) {
				if (type == MSG_FLOAT_SET)
				{
					set_float(rot, getfarg(2));
					set_float(alpha, getfarg(3));
					send_message(type, id, getfarg(2), getfarg(3));
				}
			}
		}
		parts {
			part { name: SIZE_SETTER;
				type: SWALLOW;
				description {
					state: "default" 0.0;
					align: 0 0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 1.0;
				}
			}
			part {
				name: "unit";
				type: IMAGE;
				description {
					state: "default" 0.0;
					color: 255 255 255 75;
					fixed: 1 1;
					rel1{relative: 0.0 0.0; to:SIZE_SETTER;}
					rel2{relative: 1.0 1.0; to:SIZE_SETTER;}
					image {
						normal: "page_indicator_unit.png";
					}
					map {
						on: 1;
						perspective_on: 1;
						smooth: 1;
						alpha: 1;
					}
				}
				description {
					state: "current" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
					image {
						normal: "page_indicator_current.png";
					}
				}
			}
			part { name: "over2";
				type: RECT;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					rel1{relative: 0.0 0.0; to:SIZE_SETTER;}
					rel2{relative: 1.0 1.0; to:SIZE_SETTER;}
					color: 0 0 0 0;
				}
			}
		}
		programs {
			program
			{
				name: "indice_set_default";
				signal: SIGNAL_PAGE_INDICATOR_DEFAULT;
				source: SIGNAL_SOURCE;
				action: STATE_SET "default" 0.0;
				target: "unit";
			}
			program
			{
				name: "indice_set_current";
				signal: SIGNAL_PAGE_INDICATOR_CURRENT;
				source: SIGNAL_SOURCE;
				action: STATE_SET "current" 0.0;
				target: "unit";
			}
			program {
				name: "rotation,changed";
				signal: SIGNAL_PAGE_INDICATOR_ROTATION_CHANGE;
				source: SIGNAL_SOURCE;
				script {
					custom_state(PART:"unit", "default", 0.0);
					set_state_val(PART:"unit", STATE_MAP_ROT_Z, get_float(rot));
					set_state_val(PART:"unit", STATE_COLOR, 255, 255, 255, round(get_float(alpha)));
					set_state(PART:"unit", "custom", 0.0);
				}
			}
			program { name: "button_click";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "clicked" "move_to_another";
			}
		} // programs
   }
   group { name: GROUP_PAGE_INDICATOR_UNIT_CENTER;
        data {
            item: "focus_highlight" "on";
        }
		images {
			image: "page_indicator_center.png" COMP;
		}
		script {
			public alpha;

			public message(Msg_Type:type, id, ...) {
				if (type == MSG_FLOAT_SET)
				{
					set_float(alpha, getfarg(3));
					send_message(type, id, getfarg(3));
				}
			}
		}
		parts {
			part { name: SIZE_SETTER;
				type: SWALLOW;
				description {
					state: "default" 0.0;
					align: 0 0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 1.0;
				}
			}
			part {
				name: "unit";
				type: IMAGE;
				description {
					state: "default" 0.0;
					color: 255 255 255 75;
					rel1{relative: 0.0 0.0; to:SIZE_SETTER;}
					rel2{relative: 1.0 1.0; to:SIZE_SETTER;}
					image {
						normal: "page_indicator_center.png";
					}
					map {
						on: 1;
						perspective_on: 1;
						smooth: 1;
						alpha: 1;
					}
				}
				description {
					state: "current" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
					image {
						normal: "page_indicator_center.png";
					}
				}
			}
			part {
				name: "over2";
				type: RECT;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "page_num";
				type: TEXTBLOCK;
				repeat_events: 1;
				description {
					state: "default" 0.0;
					rel1{relative: 0.0 0.0; to: "unit";}
					rel2{relative: 1.0 1.0; to: "unit";}
					text {
						style: "page_indicator_style";
						align: 0.5 0.5;
					}
					visible: 1;
				}
			}
		}
		programs {
			program
			{
				name: "indice_set_default";
				signal: SIGNAL_PAGE_INDICATOR_DEFAULT;
				source: SIGNAL_SOURCE;
				action: STATE_SET "default" 0.0;
				target: "unit";
			}
			program
			{
				name: "indice_set_current";
				signal: SIGNAL_PAGE_INDICATOR_CURRENT;
				source: SIGNAL_SOURCE;
				action: STATE_SET "current" 0.0;
				target: "unit";
			}
			program {
				name: "rotation,changed";
				signal: SIGNAL_PAGE_INDICATOR_ROTATION_CHANGE;
				source: SIGNAL_SOURCE;
				script {
					custom_state(PART:"unit", "default", 0.0);
					set_state_val(PART:"unit", STATE_COLOR, 255, 255, 255, round(get_float(alpha)));
					set_state(PART:"unit", "custom", 0.0);
				}
			}
			 program { name: "button_click";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "clicked" "move_to_another";
			 }
		} // programs
   }// group
}
